name: "Build the image"

on:
  workflow_call:
    inputs:
      # contiainer-args:
      #   required: true
      #   type: string
      manifests-repository:
        required: true
        type: string
    secrets:
      dockerhub-username:
        required: true
      dockerhub-token:
        required: true

jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build-info.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: container-build-args
        run: |

          CURRENT_TAG=""
          INPUT_TYPE=$(echo "${{ github.ref }}" | awk -F '/' '{print $2}')
          
          if [ "${INPUT_TYPE}" = "tags" ];then
            CURRENT_TAG=$(git describe --tags --abbrev=0 --match 'v*')
          else
            CURRENT_TAG="${{ github.event.inputs.environment }}"
          fi
            
          echo ${CURRENT_TAG}
          echo 'CURRENT_TAG='${CURRENT_TAG} >> $GITHUB_ENV

          # EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

          # echo 'CONTAINER_BUILD_ARGS<<'${EOF} >> $GITHUB_OUTPUT
          # echo 'CURRENT_TAG='${CURRENT_TAG} >> $GITHUB_OUTPUT
          # echo ${EOF} >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set image tag
        id: set-image-tag
        run: | 
          SHORT_SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG="${{ env.CURRENT_TAG}}-${SHORT_SHA}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> ${GITHUB_ENV}
        shell: bash
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          # tags: ${{ env.IMAGE_TAG }}
          tags: kawa1/github-actions-test:${{ env.IMAGE_TAG }}
      - name: build info
        id: build-info
        run: | 
          echo "image-tag=$(echo ${IMAGE_TAG})" >> $GITHUB_OUTPUT
        shell: bash
      - name: Print args
        run: echo "Hello! ${{ inputs.container-args }} and ${{ inputs.manifest-repository }}"
        shell: bash
